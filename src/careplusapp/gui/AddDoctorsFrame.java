/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package careplusapp.gui;

import careplusapp.dao.DoctorsDao;
import careplusapp.dao.EmpDao;
import careplusapp.dao.UserDao;
import careplusapp.pojo.DoctorPojo;
import careplusapp.pojo.EmpPojo;
import careplusapp.pojo.UserPojo;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import careplusapp.utility.PasswordEncryption;
import java.util.Map;
import java.util.Set;
import javax.swing.UIManager;

/**
 *
 * @author hardi
 */
public class AddDoctorsFrame extends javax.swing.JFrame {
    
    private String logId,selEmpId,selEmpName;
    private String pwd1,pwd2;
    private String contactNo,emailId,qualification,specialist;
    public AddDoctorsFrame() {
        UIManager.put( "TextComponent.arc", 10 );
        UIManager.put( "Component.arc", 10 );
        UIManager.put( "CheckBox.arc", 10 );
        UIManager.put( "ProgressBar.arc", 10 );
        initComponents();
        if(!loadEmpId()){
            btnAdd.setEnabled(false);
        }
        generateNewId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        txtQualification = new javax.swing.JTextField();
        txtEmpId = new javax.swing.JTextField();
        txtSpecialist = new javax.swing.JTextField();
        jcEmpJob = new javax.swing.JComboBox<>();
        lblEmpName = new javax.swing.JLabel();
        lblEmpJob = new javax.swing.JLabel();
        Salary = new javax.swing.JLabel();
        lblEmpID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        Salary1 = new javax.swing.JLabel();
        Salary2 = new javax.swing.JLabel();
        Salary3 = new javax.swing.JLabel();
        txtEmpName1 = new javax.swing.JTextField();
        txtEmailId = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        lblEmpJob1 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        Salary4 = new javax.swing.JLabel();
        txtReTypePassword = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();
        Salary5 = new javax.swing.JLabel();
        jcEmpId = new javax.swing.JComboBox<>();
        Salary6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 675));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setBackground(new java.awt.Color(0, 110, 220));
        btnAdd.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD DOCTOR");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 510, 370, 80));

        txtQualification.setBackground(new java.awt.Color(234, 234, 234));
        txtQualification.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtQualification, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 230, 200, 40));

        txtEmpId.setEditable(false);
        txtEmpId.setBackground(new java.awt.Color(214, 214, 214));
        txtEmpId.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtEmpId.setText("id");
        txtEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 200, 40));

        txtSpecialist.setBackground(new java.awt.Color(234, 234, 234));
        txtSpecialist.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtSpecialist, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 280, 200, 40));

        jcEmpJob.setBackground(new java.awt.Color(234, 234, 234));
        jcEmpJob.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jcEmpJob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        jcEmpJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEmpJobActionPerformed(evt);
            }
        });
        jPanel1.add(jcEmpJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 200, 40));

        lblEmpName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblEmpName.setText("Doctor Name");
        jPanel1.add(lblEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 200, 40));

        lblEmpJob.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblEmpJob.setText("Email ID");
        jPanel1.add(lblEmpJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 200, 40));

        Salary.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary.setText("Specialist");
        jPanel1.add(Salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 200, 40));

        lblEmpID.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblEmpID.setText("Doctor ID");
        jPanel1.add(lblEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 200, 40));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/careplusapp/icons/568174 (1).png"))); // NOI18N
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 50));

        btnClear.setBackground(new java.awt.Color(208, 208, 208));
        btnClear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 510, 380, 80));

        Salary1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary1.setText("Employee ID");
        jPanel1.add(Salary1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 190, 40));

        Salary2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary2.setText("Qualification");
        jPanel1.add(Salary2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 200, 40));

        Salary3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary3.setText("Gender");
        jPanel1.add(Salary3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 200, 40));

        txtEmpName1.setEditable(false);
        txtEmpName1.setBackground(new java.awt.Color(234, 234, 234));
        txtEmpName1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtEmpName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, 200, 40));

        txtEmailId.setBackground(new java.awt.Color(234, 234, 234));
        txtEmailId.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 200, 40));

        txtContactNo.setBackground(new java.awt.Color(234, 234, 234));
        txtContactNo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 180, 200, 40));

        lblEmpJob1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblEmpJob1.setText("Login ID");
        jPanel1.add(lblEmpJob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 280, 200, 40));

        txtLogin.setBackground(new java.awt.Color(234, 234, 234));
        txtLogin.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 200, 40));

        Salary4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary4.setText("Retype Password");
        jPanel1.add(Salary4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 200, 40));

        txtReTypePassword.setBackground(new java.awt.Color(234, 234, 234));
        txtReTypePassword.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtReTypePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 380, 200, 40));

        txtPassword.setBackground(new java.awt.Color(234, 234, 234));
        txtPassword.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 330, 200, 40));

        Salary5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary5.setText("Password");
        jPanel1.add(Salary5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 330, 200, 40));

        jcEmpId.setBackground(new java.awt.Color(214, 214, 214));
        jcEmpId.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jcEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEmpIdActionPerformed(evt);
            }
        });
        jPanel1.add(jcEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 200, 40));

        Salary6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Salary6.setText("Contact No");
        jPanel1.add(Salary6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, 200, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    if(jcEmpId.getSelectedItem()==null || validateInputs()==false){
        JOptionPane.showMessageDialog(null,"Please input all data");
        return;
     }
    String passwordValid=matchPassword();
    if(passwordValid!=null){
        JOptionPane.showMessageDialog(null,passwordValid);
        return;
     }
    if(isContactNoValid()==false){
        JOptionPane.showMessageDialog(null, "Invalid Mobile Number");
        return;
     }
    try{
         System.out.println("try block");
         UserPojo user = new UserPojo();
         user.setLoginId(txtLogin.getText().toString());
         String encPassword=new String(PasswordEncryption.getEncryptedPassword(pwd1));
         user.setPassword(encPassword);
         user.setUserName(txtEmpName1.getText().toString());
         user.setUserType("DOCTOR");
         boolean userAdded = UserDao.addUser(user);
         DoctorPojo doc = new DoctorPojo();
         doc.setDoctorId(txtEmpId.getText().trim());
         doc.setContactNo(txtContactNo.getText().toString());
         doc.setDoctorName(txtEmpName1.getText().toString());
         doc.setEmailId(txtEmailId.getText().toString());
         doc.setGender(jcEmpJob.getSelectedItem().toString());
         doc.setQualification(txtQualification.getText().toString());
         doc.setSpecialist(txtSpecialist.getText().toString());
         System.out.println("add doc called"+doc.getDoctorName());
         boolean result=DoctorsDao.addDoctor(doc);
         if(userAdded && result){
          JOptionPane.showMessageDialog(null, "Record added successfully");
          generateNewId();
          loadEmpId();
          clear();
          ManageDoctorsFrame manageDrFrame=new ManageDoctorsFrame();
          manageDrFrame.setVisible(true);
          this.dispose();
          return;
         }
         JOptionPane.showMessageDialog(null, "Could not add the record! Try Again");    
     }
     catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
     catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null,"Please input numeric salary!"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    //}
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        ManageDoctorsFrame manageDrFrame=new ManageDoctorsFrame();
        manageDrFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jcEmpJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEmpJobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcEmpJobActionPerformed

    private void jcEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEmpIdActionPerformed
        try{
            String empId=jcEmpId.getSelectedItem().toString();
            EmpPojo emp=EmpDao.getEmployeeDetails(empId);
            txtEmpName1.setText(emp.getEmpName());
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jcEmpIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminOptionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Salary;
    private javax.swing.JLabel Salary1;
    private javax.swing.JLabel Salary2;
    private javax.swing.JLabel Salary3;
    private javax.swing.JLabel Salary4;
    private javax.swing.JLabel Salary5;
    private javax.swing.JLabel Salary6;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jcEmpId;
    private javax.swing.JComboBox<String> jcEmpJob;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpJob;
    private javax.swing.JLabel lblEmpJob1;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtEmpName1;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtQualification;
    private javax.swing.JPasswordField txtReTypePassword;
    private javax.swing.JTextField txtSpecialist;
    // End of variables declaration//GEN-END:variables

    private void generateNewId() {
        try{
            String empId=DoctorsDao.getNewDocId();
            txtEmpId.setText(empId);
            txtQualification.setText("");
            txtSpecialist.setText("");
            jcEmpJob.setSelectedIndex(0);
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }

    private void clear() {
        txtEmpName1.setText("");
        txtEmailId.setText("");
        txtContactNo.setText("");
        txtQualification.setText("");
        jcEmpJob.setSelectedIndex(0);
        txtSpecialist.setText("");
        txtLogin.setText("");
        txtPassword.setText("");
        txtReTypePassword.setText("");
        txtLogin.requestFocus();
    }
    private boolean loadEmpId() {
        try{
            Set <String> set = EmpDao.getUnRegisteredDoctors().keySet();
            if(set.size()==0){
                return false;
            }
            for(String id:set){
                jcEmpId.addItem(id);
            }
        }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
        }
        return true;
    }
    
    private boolean validateInputs() {
        logId=this.txtLogin.getText().trim();
        char []p1=this.txtPassword.getPassword();
        char []p2=this.txtReTypePassword.getPassword();
        contactNo=this.txtContactNo.getText().trim();
        qualification=this.txtQualification.getText().trim();
        emailId=this.txtEmailId.getText().trim();
        specialist=this.txtSpecialist.getText().trim();
        if(logId.isEmpty() || p1.length==0 || p2.length==0 || contactNo.isEmpty() || qualification.isEmpty() ||emailId.isEmpty() || specialist.isEmpty()){
            return false;
            
        }
        pwd1=new String(p1);
        pwd2=new String(p2);
        return true;
    }

    private String matchPassword() {
        pwd1=pwd1.trim();
        pwd2=pwd2.trim();
        if(pwd1.length()<3 || pwd2.length()<3){
            return "Password must be of 3 characters in length";
            
        }
        if(pwd1.equals(pwd2)==false){
            return "Passwords do not match";
        }
        return null;
    }

    private boolean isContactNoValid() {
        char []mob=contactNo.toCharArray();
        for(char ch:mob){
            if(Character.isDigit(ch)==false){
                return false;
            }
        }
        if(contactNo.length()==10)
            return true;
        return false;
    }
}
