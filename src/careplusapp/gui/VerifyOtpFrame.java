/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package careplusapp.gui;

import careplusapp.dao.AppointmentDao;
import careplusapp.dao.PatientDao;
import careplusapp.pojo.AppointmentPojo;
import careplusapp.pojo.PatientPojo;
import careplusapp.utility.OTPSender;
import careplusapp.utility.Sender;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Color;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author hardi
 */
public class VerifyOtpFrame extends javax.swing.JFrame {

    private String empName,empSal;
    private int otp;
    private PatientPojo pat;
    private AppointmentPojo app;
    public VerifyOtpFrame() {
        UIManager.put( "TextComponent.arc", 10 );
        UIManager.put( "Component.arc", 10 );
        UIManager.put( "CheckBox.arc", 10 );
        UIManager.put( "ProgressBar.arc", 10 );
        FlatMacLightLaf.setup();
        initComponents();
    }
    public VerifyOtpFrame(PatientPojo pat,AppointmentPojo app) {
        this();
        this.pat = pat;
        this.app = app;
        readFromPojo();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        txtPhone = new javax.swing.JTextField();
        txtPatName = new javax.swing.JTextField();
        txtOtp = new javax.swing.JTextField();
        lblEmpName = new javax.swing.JLabel();
        lblEmpJob = new javax.swing.JLabel();
        lblEmpID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 675));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setBackground(new java.awt.Color(0, 110, 220));
        btnAdd.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("VERIFY");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 320, 80));

        txtPhone.setBackground(new java.awt.Color(234, 234, 234));
        txtPhone.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jPanel1.add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 350, 60));

        txtPatName.setEditable(false);
        txtPatName.setBackground(new java.awt.Color(214, 214, 214));
        txtPatName.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtPatName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtPatName, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 350, 60));

        txtOtp.setBackground(new java.awt.Color(234, 234, 234));
        txtOtp.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jPanel1.add(txtOtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 320, 230, 60));

        lblEmpName.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpName.setText("Phone no");
        jPanel1.add(lblEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 300, 60));

        lblEmpJob.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpJob.setText("Enter OTP");
        jPanel1.add(lblEmpJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 300, 60));

        lblEmpID.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpID.setText("Patient Name");
        jPanel1.add(lblEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 300, 60));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/careplusapp/icons/568174 (1).png"))); // NOI18N
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 50));

        btnClear.setBackground(new java.awt.Color(208, 208, 208));
        btnClear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, 320, 80));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("OTP SENT SUCCESSFULLY!");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 650, 70));

        jButton1.setBackground(new java.awt.Color(244, 244, 244));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setText("SEND OTP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 320, 110, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
                                     
     boolean isInputValid=validateInputs() && isContactNoValid();
     if(!isInputValid){
         JOptionPane.showMessageDialog(null, "Please input all the data!");
         System.out.println(isContactNoValid()+"  "+validateInputs());
         return;
     }
     try{
         int enteredOtp = Integer.parseInt(txtOtp.getText().toString().trim());
         if(enteredOtp != otp){
            JOptionPane.showMessageDialog(null, "Incorrect OTP!","Error",JOptionPane.ERROR_MESSAGE);
            return;
         }
         pat.setMno(txtPhone.getText().toString().trim());
         pat.setOtp(otp);
         app.setMobileNo(txtPhone.getText().toString().trim());
         boolean result=PatientDao.addPatient(pat);
         boolean result2=AppointmentDao.addAppointment(app);
         if(result && result2){
          JOptionPane.showMessageDialog(null, "Patient registered successfully!");
          new ReceptionistOptionsFrame().setVisible(true);
          this.dispose();
          return;
         }
         JOptionPane.showMessageDialog(null, "Could not add the record! Try Again");
     }
     catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
     catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null,"Invalid OTP!"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
     catch(Exception ex){
            JOptionPane.showMessageDialog(null,"Error: "+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
     }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtPatNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatNameActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        new AddPatientFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtOtp.setText("");
        txtOtp.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        generateNewOtp();
        Sender send = new OTPSender();
        boolean otpSent = false;
        try {
            otpSent = send.send(txtPhone.getText().toString().trim(), String.valueOf(otp));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if(otpSent){
            jTextField1.setBackground(new Color(210,228,245));
            jTextField1.setForeground(new Color(0,110,220));
            btnAdd.setLocation(270, 510);
            btnClear.setLocation(600, 510);
            txtOtp.requestFocus();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminOptionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpJob;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JTextField txtOtp;
    private javax.swing.JTextField txtPatName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    private boolean validateInputs() {
        if(txtOtp.getText().trim().isEmpty())
            return false;
        return true;
    }
    private boolean isContactNoValid() {
        char []mob=txtPhone.getText().toString().toCharArray();
        for(char ch:mob){
            if(Character.isDigit(ch)==false){
                return false;
            }
        }
        if(mob.length==10)
            return true;
        return false;
    }

    private void readFromPojo() {
        txtPatName.setText(pat.getFirstName()+" "+pat.getLastName());
        txtPhone.setText(pat.getMno());
    }
    private void generateNewOtp(){
        otp = 1000+new Random().nextInt(1000);
        System.out.println(otp);
    }

}
