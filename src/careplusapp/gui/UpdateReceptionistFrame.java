/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package careplusapp.gui;

import careplusapp.dao.EmpDao;
import careplusapp.dao.ReceptionistDao;
import careplusapp.dao.UserDao;
import careplusapp.pojo.EmpPojo;
import careplusapp.pojo.ReceptionistPojo;
import careplusapp.pojo.UserProfile;
import careplusapp.utility.PasswordEncryption;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author hardi
 */
public class UpdateReceptionistFrame extends javax.swing.JFrame {

    private String pwd1,pwd2,loginID;
    public UpdateReceptionistFrame() {
        UIManager.put( "TextComponent.arc", 10 );
        UIManager.put( "Component.arc", 10 );
        UIManager.put( "CheckBox.arc", 10 );
        UIManager.put( "ProgressBar.arc", 10 );
        initComponents();
        loadEmpId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        viewPatients = new javax.swing.JButton();
        txtLoginID = new javax.swing.JTextField();
        txtRecName = new javax.swing.JTextField();
        jcEmpId = new javax.swing.JComboBox<>();
        lblEmpJob = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Salary = new javax.swing.JLabel();
        lblEmpName = new javax.swing.JLabel();
        lblEmpID = new javax.swing.JLabel();
        Salary1 = new javax.swing.JLabel();
        jcEmpJob = new javax.swing.JComboBox<>();
        Salary2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 675));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnUpdate.setBackground(new java.awt.Color(0, 110, 220));
        btnUpdate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 530, 300, 80));

        viewPatients.setBackground(new java.awt.Color(208, 208, 208));
        viewPatients.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        viewPatients.setText("RESET");
        viewPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientsActionPerformed(evt);
            }
        });
        jPanel1.add(viewPatients, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 530, 300, 80));

        txtLoginID.setBackground(new java.awt.Color(234, 234, 234));
        txtLoginID.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jPanel1.add(txtLoginID, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 300, 50));

        txtRecName.setEditable(false);
        txtRecName.setBackground(new java.awt.Color(234, 234, 234));
        txtRecName.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        txtRecName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtRecName, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 300, 50));

        jcEmpId.setBackground(new java.awt.Color(214, 214, 214));
        jcEmpId.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jcEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEmpIdActionPerformed(evt);
            }
        });
        jPanel1.add(jcEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, 300, 50));

        lblEmpJob.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpJob.setText("Login ID");
        jPanel1.add(lblEmpJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 300, 50));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/careplusapp/icons/568174 (1).png"))); // NOI18N
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 50));

        Salary.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        Salary.setText("Password");
        jPanel1.add(Salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 300, 50));

        lblEmpName.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpName.setText("Receptionist Name");
        jPanel1.add(lblEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 300, 50));

        lblEmpID.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lblEmpID.setText("Receptionist ID");
        jPanel1.add(lblEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 300, 50));

        Salary1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        Salary1.setText("Gender");
        jPanel1.add(Salary1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 430, 300, 50));

        jcEmpJob.setBackground(new java.awt.Color(234, 234, 234));
        jcEmpJob.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jcEmpJob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        jcEmpJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcEmpJobActionPerformed(evt);
            }
        });
        jPanel1.add(jcEmpJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 430, 300, 50));

        Salary2.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        Salary2.setText("Retype Password");
        jPanel1.add(Salary2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 300, 50));

        jPasswordField1.setBackground(new java.awt.Color(234, 234, 234));
        jPanel1.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 300, 50));

        jPasswordField2.setBackground(new java.awt.Color(234, 234, 234));
        jPanel1.add(jPasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 300, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                                     
      boolean isInputValid=validateInputs();
      if(!isInputValid){
          JOptionPane.showMessageDialog(null,"Please input all fields","Error",JOptionPane.ERROR_MESSAGE);
          return;
      } 
     String passwordValid=matchPassword();
     if(passwordValid!=null){
        JOptionPane.showMessageDialog(null,passwordValid);
        return;
     }
      try{
          String recId = jcEmpId.getSelectedItem().toString();
          String gender = jcEmpJob.getSelectedItem().toString();
          boolean result = ReceptionistDao.updateRec(gender,recId);
          String newLogin = txtLoginID.getText().toString();
          String encPwd = PasswordEncryption.getEncryptedPassword(pwd1);
          boolean result2 = UserDao.updateLoginPass(loginID, encPwd, newLogin);
          System.out.println(result+" "+result2);
          if(result || result2){
              JOptionPane.showMessageDialog(null,"Record updated successfully!","Success",JOptionPane.INFORMATION_MESSAGE);
              return;
          }
          JOptionPane.showMessageDialog(null,"Record not updated!","Failure!",JOptionPane.ERROR_MESSAGE);
      }
      catch(SQLException ex){
                JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void viewPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientsActionPerformed
        clear();
    }//GEN-LAST:event_viewPatientsActionPerformed

    private void txtRecNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecNameActionPerformed

    private void jcEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEmpIdActionPerformed
        try{
            loginID = txtLoginID.getText();
            ReceptionistPojo recList = ReceptionistDao.getDetailsbyId(jcEmpId.getSelectedItem().toString());
            System.out.println(recList.getGender());
            System.out.println(jcEmpId.getSelectedItem().toString());
            jcEmpJob.setSelectedItem(recList.getGender().toString().trim());
            System.out.println(recList.getGender().toString());
            txtRecName.setText(recList.getReceptionistName());
            loginID = UserDao.getLoginIdbyName(txtRecName.getText().toString());
            txtLoginID.setText(loginID);
        }
        catch(SQLException ex){
                JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
        }
    }//GEN-LAST:event_jcEmpIdActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        new ManageReceptionistsFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jcEmpJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcEmpJobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcEmpJobActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminOptionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Salary;
    private javax.swing.JLabel Salary1;
    private javax.swing.JLabel Salary2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JComboBox<String> jcEmpId;
    private javax.swing.JComboBox<String> jcEmpJob;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpJob;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JTextField txtLoginID;
    private javax.swing.JTextField txtRecName;
    private javax.swing.JButton viewPatients;
    // End of variables declaration//GEN-END:variables

    private void loadEmpId() {
        try{
            List<String>empIdList=ReceptionistDao.getAllRecId();
            for(String id:empIdList){
                jcEmpId.addItem(id);
            }
        }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
        }
    }

    private boolean validateInputs() {
        
        char []p1=this.jPasswordField1.getPassword();
        char []p2=this.jPasswordField2.getPassword();
        if(txtRecName.getText().isEmpty()||txtLoginID.getText().isEmpty()||p1.length==0||p2.length==0)
            return false;
        pwd1=new String(p1);
        pwd2=new String(p2);
        return true;
    }
    private String matchPassword() {
        pwd1=pwd1.trim();
        pwd2=pwd2.trim();
        if(pwd1.length()<3 || pwd2.length()<3){
            return "Password must be of 3 characters in length";
            
        }
        if(pwd1.equals(pwd2)==false){
            return "Passwords do not match";
        }
        return null;
    }

    private void clear() {
        txtLoginID.setText("");
        jPasswordField1.setText("");
        jPasswordField2.setText("");
        jcEmpJob.setSelectedIndex(0);
        txtLoginID.requestFocus();
    }


}
